module BGAPI2

include("LibBGAPI2.jl")
using .LibBGAPI2

using EnumX
using StringViews
using UnsafeArrays

export Abort,
    AccessDenied,
    BGAPI2,
    BGAPI2Exception,
    Buffer,
    BufferList,
    DataStream,
    DataStreamList,
    Device,
    DeviceEvent,
    DeviceList,
    Error,
    EventMode,
    Interface,
    InterfaceList,
    InvalidBuffer,
    InvalidHandle,
    InvalidParameter,
    LowLevelException,
    NoData,
    Node,
    NodeMap,
    NotAvailable,
    NotImplemented,
    NotInitialized,
    ObjectInvalidException,
    PnPEvent,
    ResourceInUse,
    Success,
    System,
    SystemList,
    TimeoutOccurred,
    abort_acquisition,
    access_status,
    address,
    alias,
    announce_buffer,
    bool,
    bool!,
    cancel_get_filled_buffer,
    cancel_pnp_event,
    cancel_stack,
    check_status,
    chunk_layout_id,
    chunk_node_list,
    contains_chunk,
    count,
    current_access_mode,
    defines_payload_size,
    delivered_chunk_payload_size,
    delivered_height,
    delivered_width,
    description,
    device_event_mode,
    device_event_mode!,
    discard_all_buffers,
    discard_output_buffers,
    display_name,
    double,
    double!,
    double_inc,
    double_max,
    double_min,
    double_precision,
    enum_mode_list,
    event_id,
    event_mode,
    event_mode!,
    execute,
    extension,
    file_name,
    filled_buffer,
    flush_all_to_input_queue,
    flush_input_to_output_queue,
    flush_unqueued_to_input_queue,
    frame_id,
    # get,
    has_inc,
    has_unit,
    height,
    host_timestamp,
    id,
    image_buffer,
    image_length,
    image_offset,
    imposed_access_mode,
    int,
    int!,
    int_inc,
    int_max,
    int_min,
    interface,
    is_acquiring,
    is_available,
    is_done,
    is_grabbing,
    is_image_present,
    is_implemented,
    is_incomplete,
    is_locked,
    is_new_data,
    is_present,
    is_queued,
    is_readable,
    is_selector,
    is_update_mode_active,
    is_update_mode_available,
    is_writable,
    max_string_length,
    mem_buffer,
    mem_ptr,
    mem_size,
    model,
    name,
    new_buffer_event_mode,
    new_buffer_event_mode!,
    node,
    node_by_index,
    node_list,
    node_tree,
    num_announced,
    num_await_delivery,
    num_delivered,
    num_queued,
    num_started,
    num_underrun,
    path_name,
    payload_size,
    payload_type,
    pixel_format,
    pnp_event_handler_cfunction,
    pnp_event_handler_wrapper,
    pnp_event_mode,
    pnp_event_mode!,
    queue_buffer,
    register_device_event_handler,
    register_new_buffer_event_handler,
    register_pnp_event_handler,
    release,
    remote_node,
    remote_node_list,
    remote_node_tree,
    representation,
    revoke_buffer,
    selected_features,
    serial_number,
    set,
    size_filled,
    start_acquisition,
    start_acquisition_continuous,
    start_stacking,
    stop_acquisition,
    timestamp,
    tl_type,
    tool_tip,
    unit,
    update,
    user_ptr,
    value,
    value!,
    vendor,
    version,
    visibility,
    width,
    write_stack,
    x_offset,
    x_padding,
    y_offset,
    y_padding

@enumx EventMode::UInt32 begin
    UNREGISTERED = Integer(LibBGAPI2.EVENTMODE_UNREGISTERED)
    POLLING = Integer(LibBGAPI2.EVENTMODE_POLLING)
    EVENT_HANDLER = Integer(LibBGAPI2.EVENTMODE_EVENT_HANDLER)
end

Base.convert(::Type{BGAPI2_EventMode}, event_mode::EventMode.T) = BGAPI2_EventMode(Integer(event_mode))
Base.convert(::Type{EventMode.T}, event_mode::BGAPI2_EventMode) = EventMode.T(Integer(event_mode))

include("exceptions.jl")
include("buffer.jl")
include("deviceevent.jl")
include("node.jl")
include("nodemap.jl")
include("pnpevent.jl")
include("system.jl")
include("interface.jl")
include("device.jl")
include("datastream.jl")

end # module BGAPI2
